scripts/cpa.sh -heap 4096M -benchmark -timelimit 300s -config ./config/myAnalysis-concurrent-interrupt-benchmark-goblint-regression.properties -stats -spec test/unreach-call.prp -32 test/svcomp-benchmarks/goblint-regression_interrupt/goblint-regression_interrupt/svp_simple_500_001.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 4096M.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 300s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.0 / myAnalysis-concurrent-interrupt-benchmark-goblint-regression (Java HotSpot(TM) 64-Bit Server VM 11.0.8) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/svcomp-benchmarks/goblint-regression_interrupt/goblint-regression_interrupt/svp_simple_500_001.i" (CPAchecker.parse, INFO)

Building Constrained Dependency Graph ... (EdgeInfo.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 cpa.threadingintp.maxInterruptLevel
 cpa.por.pcdpor.depComputationStateType
 cpa.locations.useIncClonedFunc 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

========================== Verify Result ===========================
explored states: 289
reached set size: 290
total time: 194 ms
Race times:
 
[31m=========================== Conflicts checked =============================
The total number of conflicts is1
RWR conflicts have 1
WRW conflicts have 0
RWW conflicts have 0
WWR conflicts have 0
[0m=========================== ËØ¶ÁªÜÁä∂ÊÄÅÂ¶Ç‰∏ã =============================
 raceRWRSet:
[
glob:(glob,svp_simple_500_001_main, '1289, 'R)
                               (glob,svp_simple_500_001_isr_1, '1281, 'W)
                               (glob,svp_simple_500_001_main, '1289, 'R)
}]
 raceWRWSet:
[]
 raceRWWSet:
[]
 raceWWRSet:
[]
=========================== Predicates =============================
====================================================================
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


BDDCPA statistics
-----------------
Number of boolean vars:           0 (of 4)
Number of intEqual vars:          0 (of 0)
Number of intAdd vars:            3 (of 3)
Number of all vars:               3
Number of intBool partitions:     4
Number of intEq partitions:       0
Number of intAdd partitions:      1
Number of all partitions:         11
Number of named predicates:          1920
Number of BDD nodes:                               9629
Size of BDD node table:                            207593
Size of BDD cache:                                 20759
Size of BDD node cleanup queue:                    0.22 (sum: 769, count: 3507, min: 0, max: 769)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

DataAccessCPA statistics
------------------------
[32mtime for TransferRelation:[0m      [33m    0.051s[0m

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 287, count: 287, min: 1, max: 1) [1 x 287]
Number of states with assumption transitions:      0

Constrained Dependency Graph statistics
---------------------------------------
Time for building the nodes of conditional dependence graph:     0.048s
Time for building conditional dependence graph:        0.191s
  Number of dependent node:                               5 (count: 1, min: 5, max: 5, avg: 5.00)
  Number of dependent node pairs:                        12
  Number of un-conditional dependent node pairs:         12
  Number of block:                                        5
  Size of block:                                          5 (sum: 5, min: 1, max: 1, avg: 1.00)

CPA algorithm statistics
------------------------
Number of iterations:            290
Max size of waitlist:            2
Average size of waitlist:        1
ThreadingSortedWaitlist:                           15.00 (sum: 15, count: 1, min: 15, max: 15)
CallstackSortedWaitlist:                           0.05 (sum: 15, count: 275, min: 0, max: 8)
Number of computed successors:   289
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         0
Number of times breaked:         0

Total time for CPA algorithm:         0.194s (Max:     0.194s)
  Time for choose from waitlist:      0.003s
  Time for precision adjustment:      0.008s
  Time for transfer relation:         0.154s
  Time for stop operator:             0.008s
  Time for adding to reached set:     0.016s

CPAchecker general statistics
-----------------------------
Number of program locations:                       306
Number of CFA edges (per node):                         298 (count: 306, min: 0, max: 1, avg: 0.97)
Number of relevant variables:                      0
Number of functions:                               8
Number of loops (and loop nodes):                         0 (sum: 0, min: 0, max: 0, avg: 0.00)
Size of reached set:             290
  Number of partitions:          287
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [{svp_simple_500_001_main=N41 (before line 1290) Function svp_simple_500_001_main called from node N37, stack depth 1 [1ee27d73], stack [svp_simple_500_001_main] @@ -2147483648 @@ 0}])
  Number of target states:       0

Time for analysis setup:          1.917s
  Time for loading CPAs:          0.379s
  Time for loading parser:        0.258s
  Time for CFA construction:      0.971s
    Time for parsing file(s):     0.517s
    Time for AST to CFA:          0.307s
    Time for CFA sanity check:    0.001s
    Time for post-processing:     0.107s
      Time for function pointers resolving:            0.005s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.045s
        Time for collecting variables:                 0.013s
        Time for solving dependencies:                 0.001s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.031s
        Time for exporting data:                       0.000s
Time for Analysis:                0.207s
CPU time for analysis:            0.210s
Time for analyzing result:        0.008s
Total time for CPAchecker:        2.124s
Total CPU time for CPAchecker:    2.130s
Time for statistics:              0.086s

Time for Garbage Collector:       0.052s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
