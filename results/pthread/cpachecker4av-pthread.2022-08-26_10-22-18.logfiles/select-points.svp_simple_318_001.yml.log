scripts/cpa.sh -heap 4096M -benchmark -timelimit 300s -config ./config/myAnalysis-concurrent-interrupt-benchmark-pthread.properties -stats -spec test/unreach-call.prp -32 test/svcomp-benchmarks/pthread_interrupt/pthread_interrupt/svp_simple_318_001.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 4096M.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 300s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.0 / myAnalysis-concurrent-interrupt-benchmark-pthread (Java HotSpot(TM) 64-Bit Server VM 11.0.8) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/svcomp-benchmarks/pthread_interrupt/pthread_interrupt/svp_simple_318_001.i" (CPAchecker.parse, INFO)

line 845: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

Building Constrained Dependency Graph ... (EdgeInfo.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 cpa.threadingintp.maxInterruptLevel
 cpa.por.pcdpor.depComputationStateType
 cpa.locations.useIncClonedFunc 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

========================== Verify Result ===========================
explored states: 385
reached set size: 386
total time: 337 ms
Race times:
 
[31m=========================== Conflicts checked =============================
The total number of conflicts is0
RWR conflicts have 0
WRW conflicts have 0
RWW conflicts have 0
WWR conflicts have 0
[0m=========================== ËØ¶ÁªÜÁä∂ÊÄÅÂ¶Ç‰∏ã =============================
 raceRWRSet:
[]
 raceWRWSet:
[]
 raceRWWSet:
[]
 raceWWRSet:
[]
=========================== Predicates =============================
====================================================================
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


BDDCPA statistics
-----------------
Number of boolean vars:           4 (of 6)
Number of intEqual vars:          2 (of 4)
Number of intAdd vars:            4 (of 5)
Number of all vars:               10
Number of intBool partitions:     4
Number of intEq partitions:       2
Number of intAdd partitions:      3
Number of all partitions:         16
Number of named predicates:          2816
Number of BDD nodes:                               28532
Size of BDD node table:                            207593
Size of BDD cache:                                 20759
Size of BDD node cleanup queue:                    0.04 (sum: 994, count: 22707, min: 0, max: 994)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

DataAccessCPA statistics
------------------------
[32mtime for TransferRelation:[0m      [33m    0.048s[0m

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                     0.99 (sum: 383, count: 388, min: 0, max: 1) [0 x 5, 1 x 383]
Number of states with assumption transitions:      0

Constrained Dependency Graph statistics
---------------------------------------
Time for building the nodes of conditional dependence graph:     0.087s
Time for building conditional dependence graph:        0.189s
  Number of dependent node:                              17 (count: 1, min: 17, max: 17, avg: 17.00)
  Number of dependent node pairs:                        40
  Number of un-conditional dependent node pairs:         40
  Number of block:                                       17
  Size of block:                                         17 (sum: 17, min: 1, max: 1, avg: 1.00)

CPA algorithm statistics
------------------------
Number of iterations:            386
Max size of waitlist:            8
Average size of waitlist:        3
ThreadingSortedWaitlist:                           164.00 (sum: 164, count: 1, min: 164, max: 164)
CallstackSortedWaitlist:                           0.74 (sum: 164, count: 222, min: 0, max: 164)
Number of computed successors:   385
Max successors for one state:    3
Number of times merged:          0
Number of times stopped:         0
Number of times breaked:         0

Total time for CPA algorithm:         0.337s (Max:     0.337s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:      0.017s
  Time for transfer relation:         0.240s
  Time for stop operator:             0.034s
  Time for adding to reached set:     0.017s

CPAchecker general statistics
-----------------------------
Number of program locations:                       291
Number of CFA edges (per node):                         298 (count: 291, min: 0, max: 2, avg: 1.02)
Number of relevant variables:                      13
Number of functions:                               12
Number of loops (and loop nodes):                         2 (sum: 20, min: 10, max: 10, avg: 10.00)
Size of reached set:             386
  Number of partitions:          244
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [{svp_simple_318_001_isr_1=N76 (before line 853) Function svp_simple_318_001_isr_1 called from node N71, stack depth 1 [4c0ab04f], stack [svp_simple_318_001_isr_1] @@ 1 @@ 1, svp_simple_318_001_main=N105 (before line 886) Function svp_simple_318_001_main called from node N104, stack depth 1 [15fd3088], stack [svp_simple_318_001_main] @@ -2147483648 @@ 0}])
  Number of target states:       0

Time for analysis setup:          2.137s
  Time for loading CPAs:          0.403s
  Time for loading parser:        0.304s
  Time for CFA construction:      1.079s
    Time for parsing file(s):     0.575s
    Time for AST to CFA:          0.328s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.129s
      Time for function pointers resolving:            0.008s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.067s
        Time for collecting variables:                 0.033s
        Time for solving dependencies:                 0.001s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.033s
        Time for exporting data:                       0.000s
Time for Analysis:                0.352s
CPU time for analysis:            0.350s
Time for analyzing result:        0.013s
Total time for CPAchecker:        2.490s
Total CPU time for CPAchecker:    2.480s
Time for statistics:              0.087s

Time for Garbage Collector:       0.056s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
