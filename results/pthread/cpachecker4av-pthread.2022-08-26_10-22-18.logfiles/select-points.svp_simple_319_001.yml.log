scripts/cpa.sh -heap 4096M -benchmark -timelimit 300s -config ./config/myAnalysis-concurrent-interrupt-benchmark-pthread.properties -stats -spec test/unreach-call.prp -32 test/svcomp-benchmarks/pthread_interrupt/pthread_interrupt/svp_simple_319_001.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 4096M.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 300s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.0 / myAnalysis-concurrent-interrupt-benchmark-pthread (Java HotSpot(TM) 64-Bit Server VM 11.0.8) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/svcomp-benchmarks/pthread_interrupt/pthread_interrupt/svp_simple_319_001.i" (CPAchecker.parse, INFO)

line 846: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

Building Constrained Dependency Graph ... (EdgeInfo.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 cpa.threadingintp.maxInterruptLevel
 cpa.por.pcdpor.depComputationStateType
 cpa.locations.useIncClonedFunc 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

========================== Verify Result ===========================
explored states: 390
reached set size: 391
total time: 299 ms
Race times:
 
[31m=========================== Conflicts checked =============================
The total number of conflicts is0
RWR conflicts have 0
WRW conflicts have 0
RWW conflicts have 0
WWR conflicts have 0
[0m=========================== ËØ¶ÁªÜÁä∂ÊÄÅÂ¶Ç‰∏ã =============================
 raceRWRSet:
[]
 raceWRWSet:
[]
 raceRWWSet:
[]
 raceWWRSet:
[]
=========================== Predicates =============================
====================================================================
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


BDDCPA statistics
-----------------
Number of boolean vars:           3 (of 6)
Number of intEqual vars:          3 (of 5)
Number of intAdd vars:            4 (of 5)
Number of all vars:               10
Number of intBool partitions:     3
Number of intEq partitions:       3
Number of intAdd partitions:      3
Number of all partitions:         16
Number of named predicates:          2880
Number of BDD nodes:                               27645
Size of BDD node table:                            207593
Size of BDD cache:                                 20759
Size of BDD node cleanup queue:                    0.03 (sum: 517, count: 20321, min: 0, max: 517)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

DataAccessCPA statistics
------------------------
[32mtime for TransferRelation:[0m      [33m    0.011s[0m

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                     0.99 (sum: 388, count: 393, min: 0, max: 1) [0 x 5, 1 x 388]
Number of states with assumption transitions:      0

Constrained Dependency Graph statistics
---------------------------------------
Time for building the nodes of conditional dependence graph:     0.085s
Time for building conditional dependence graph:        0.186s
  Number of dependent node:                              16 (count: 1, min: 16, max: 16, avg: 16.00)
  Number of dependent node pairs:                        34
  Number of un-conditional dependent node pairs:         34
  Number of block:                                       16
  Size of block:                                         16 (sum: 16, min: 1, max: 1, avg: 1.00)

CPA algorithm statistics
------------------------
Number of iterations:            391
Max size of waitlist:            8
Average size of waitlist:        3
ThreadingSortedWaitlist:                           195.00 (sum: 195, count: 1, min: 195, max: 195)
CallstackSortedWaitlist:                           0.99 (sum: 195, count: 196, min: 0, max: 195)
Number of computed successors:   390
Max successors for one state:    3
Number of times merged:          0
Number of times stopped:         0
Number of times breaked:         0

Total time for CPA algorithm:         0.299s (Max:     0.299s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      0.016s
  Time for transfer relation:         0.245s
  Time for stop operator:             0.005s
  Time for adding to reached set:     0.017s

CPAchecker general statistics
-----------------------------
Number of program locations:                       294
Number of CFA edges (per node):                         302 (count: 294, min: 0, max: 3, avg: 1.03)
Number of relevant variables:                      15
Number of functions:                               12
Number of loops (and loop nodes):                         2 (sum: 21, min: 10, max: 11, avg: 10.50)
Size of reached set:             391
  Number of partitions:          245
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [{svp_simple_319_001_isr_1=N78 (before line 854) Function svp_simple_319_001_isr_1 called from node N73, stack depth 1 [11d422fd], stack [svp_simple_319_001_isr_1] @@ 1 @@ 1, svp_simple_319_001_main=N108 (before line 888) Function svp_simple_319_001_main called from node N107, stack depth 1 [581d5b33], stack [svp_simple_319_001_main] @@ -2147483648 @@ 0}])
  Number of target states:       0

Time for analysis setup:          1.982s
  Time for loading CPAs:          0.345s
  Time for loading parser:        0.256s
  Time for CFA construction:      1.030s
    Time for parsing file(s):     0.539s
    Time for AST to CFA:          0.302s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.123s
      Time for function pointers resolving:            0.004s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.060s
        Time for collecting variables:                 0.037s
        Time for solving dependencies:                 0.001s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.022s
        Time for exporting data:                       0.000s
Time for Analysis:                0.333s
CPU time for analysis:            0.340s
Time for analyzing result:        0.001s
Total time for CPAchecker:        2.316s
Total CPU time for CPAchecker:    2.320s
Time for statistics:              0.078s

Time for Garbage Collector:       0.050s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
