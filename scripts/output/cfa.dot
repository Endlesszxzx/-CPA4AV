digraph CFA {
1 [shape="circle" label="N1\n29"]
30 [shape="circle" label="N30\n28"]
31 [shape="circle" label="N31\n27"]
32 [shape="circle" label="N32\n26"]
33 [shape="circle" label="N33\n25"]
34 [shape="circle" label="N34\n24"]
35 [shape="circle" label="N35\n23"]
36 [shape="circle" label="N36\n22"]
37 [shape="circle" label="N37\n21"]
38 [shape="circle" label="N38\n20"]
39 [shape="circle" label="N39\n19"]
40 [shape="circle" label="N40\n18"]
41 [shape="circle" label="N41\n17"]
42 [shape="circle" label="N42\n16"]
2 [shape="circle" label="N2\n15"]
3 [shape="circle" label="N3\n14"]
4 [shape="circle" label="N4\n13"]
5 [shape="circle" label="N5\n12"]
6 [shape="circle" label="N6\n11"]
7 [shape="circle" label="N7\n10"]
8 [shape="circle" label="N8\n9"]
9 [shape="circle" label="N9\n8"]
10 [shape="diamond" label="N10\n7"]
11 [shape="diamond" label="N11\n4"]
14 [shape="circle" label="N14\n1"]
0 [shape="circle" label="N0\n0"]
15 [shape="circle" label="N15\n3"]
16 [shape="circle" label="N16\n2"]
12 [shape="circle" label="N12\n6"]
13 [shape="circle" label="N13\n5"]
node [shape="circle"]
subgraph cluster_svp_simple_020_001_isr_1 {
label="svp_simple_020_001_isr_1()"
}
subgraph cluster_svp_simple_020_001_isr_2 {
label="svp_simple_020_001_isr_2()"
}
subgraph cluster_svp_simple_020_001_main {
label="svp_simple_020_001_main()"
1 -> 30 [label="INIT GLOBAL VARS"]
30 -> 31 [label="void idlerun();"]
31 -> 32 [label="void writeVariable(volatile unsigned char *var);"]
32 -> 33 [label="void readVariable(volatile unsigned char *var);"]
33 -> 34 [label="void lock();"]
34 -> 35 [label="void unlock();"]
35 -> 36 [label="volatile int svp_simple_020_001_global_var = 0;"]
36 -> 37 [label="int __VERIFIER_nondet_int();"]
37 -> 38 [label="volatile int svp_simple_020_001_global_para = 0;"]
38 -> 39 [label="volatile int svp_simple_020_001_global_flag = 0;"]
39 -> 40 [label="void svp_simple_020_001_main();"]
40 -> 41 [label="void svp_simple_020_001_isr_1();"]
41 -> 42 [label="void svp_simple_020_001_isr_2();"]
42 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="init();"]
3 -> 4 [label="disable_isr(2);"]
4 -> 5 [label="int reader1;"]
5 -> 6 [label="int reader2;"]
6 -> 7 [label="int svp_simple_020_001_local_var1;"]
7 -> 8 [label="int svp_simple_020_001_local_var2;"]
8 -> 9 [label="svp_simple_020_001_local_var1 = __VERIFIER_nondet_int();"]
9 -> 10 [label="svp_simple_020_001_local_var2 = __VERIFIER_nondet_int();"]
10 -> 12 [label="[(svp_simple_020_001_local_var1 + svp_simple_020_001_local_var2) > svp_simple_020_001_global_para]"]
10 -> 11 [label="[!((svp_simple_020_001_local_var1 + svp_simple_020_001_local_var2) > svp_simple_020_001_global_para)]"]
11 -> 15 [label="[(svp_simple_020_001_local_var1 + svp_simple_020_001_local_var2) < svp_simple_020_001_global_para]"]
11 -> 14 [label="[!((svp_simple_020_001_local_var1 + svp_simple_020_001_local_var2) < svp_simple_020_001_global_para)]"]
14 -> 0 [label="default return"]
15 -> 16 [label="reader2 = svp_simple_020_001_global_var;"]
16 -> 14 [label=""]
12 -> 13 [label="reader1 = svp_simple_020_001_global_var;"]
13 -> 11 [label=""]}
}